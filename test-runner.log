2022-07-04 06:20:48 info: ---------------------------------------
2022-07-04 06:20:48 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 06:20:48 info: ---------------------------------------
2022-07-04 06:20:55 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    × should have all TODO comments removed (3 ms)
    √ `getAnonName` should not contain unneeded console.log calls (2 ms)
    × should call `new Promise()` (1 ms)
    × should take a single argument (3 ms)
    × `resolve()` should be called with a one argument (1 ms)
    × `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (1 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

  ● getAnonName › should call `new Promise()`

    expect(received).toBeDefined()

    Received: undefined

      54 |
      55 |   test('should call `new Promise()`', () => {
    > 56 |     expect(state.newPromise).toBeDefined();
         |                              ^
      57 |   });
      58 |
      59 |   test('should take a single argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:56:30)

  ● getAnonName › should take a single argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 2

      58 |
      59 |   test('should take a single argument', () => {
    > 60 |     expect(state.paramCount).toBe(1);
         |                              ^
      61 |   });
      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:60:30)

  ● getAnonName › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {
    > 64 |     expect(state.resolve).toBe(1);
         |                           ^
      65 |   });
      66 |
      67 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:64:27)

  ● getAnonName › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      66 |
      67 |   test('`reject()` should be called with a one argument', () => {
    > 68 |     expect(state.reject).toBe(1);
         |                          ^
      69 |   });
      70 |
      71 |   test('should resolve when called with a string argument', async () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:68:26)

  ● getAnonName › should resolve when called with a string argument

    TypeError: callback is not a function

      19 |     const fullName = `${firstName} Doe`;
      20 |
    > 21 |     callback(fullName);
         |     ^
      22 |   }, 1000);
      23 | };
      24 |

      at cb (3-UsingAPIs/Week1/homework/ex1-johnWho.js:21:5)
      at 3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:76:35
      at getAnonName (3-UsingAPIs/Week1/homework/ex1-johnWho.js:13:3)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:77:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    TypeError: callback is not a function

      13 |   setTimeout(() => {
      14 |     if (!firstName) {
    > 15 |       callback(new Error("You didn't pass in a first name!"));
         |       ^
      16 |       return;
      17 |     }
      18 |

      at cb (3-UsingAPIs/Week1/homework/ex1-johnWho.js:15:7)
      at 3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:88:35
      at getAnonName (3-UsingAPIs/Week1/homework/ex1-johnWho.js:13:3)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:89:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       7 failed, 2 passed, 9 total
Snapshots:   0 total
Time:        1.588 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-07-04 06:31:56 info: Disclaimer turned off
2022-07-04 06:32:05 info: ---------------------------------------
2022-07-04 06:32:05 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 06:32:05 info: ---------------------------------------
2022-07-04 06:32:10 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
node:internal/process/promises:246
          triggerUncaughtException(err, true /* fromPromise */);
          ^

[UnhandledPromiseRejection: This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). The promise rejected with the reason "You didn't pass in a first name!".] {
  code: 'ERR_UNHANDLED_REJECTION'
}
2022-07-04 06:32:14 error: *** ESLint Report ***

ex1-johnWho.js
  12:33  error  'callback' is defined but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-07-04 06:32:37 info: ---------------------------------------
2022-07-04 06:32:37 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 06:32:37 info: ---------------------------------------
2022-07-04 06:32:43 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
node:internal/process/promises:246
          triggerUncaughtException(err, true /* fromPromise */);
          ^

[UnhandledPromiseRejection: This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). The promise rejected with the reason "You didn't pass in a first name!".] {
  code: 'ERR_UNHANDLED_REJECTION'
}
2022-07-04 06:37:11 info: ---------------------------------------
2022-07-04 06:37:11 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 06:37:11 info: ---------------------------------------
2022-07-04 06:37:16 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed (1 ms)
    × `getAnonName` should not contain unneeded console.log calls (6 ms)
    √ should call `new Promise()` (1 ms)
    √ should take a single argument (1 ms)
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument (2 ms)

  ● getAnonName › `getAnonName` should not contain unneeded console.log calls

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      137 |       });
      138 |
    > 139 |     expect(callsConsoleLog).toBe(false);
          |                             ^
      140 |   });
      141 | }
      142 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:139:29)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 6 passed, 9 total
Snapshots:   0 total
Time:        0.99 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-07-04 06:38:50 info: ---------------------------------------
2022-07-04 06:38:50 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 06:38:50 info: ---------------------------------------
2022-07-04 06:38:55 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (4 ms)
    × should reject with an Error object when called without an argument (2 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.04 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-07-04 06:39:49 info: ---------------------------------------
2022-07-04 06:39:49 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 06:39:49 info: ---------------------------------------
2022-07-04 06:39:54 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()` (1 ms)
    √ should take a single argument
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (3 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.173 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-07-04 06:41:21 info: ---------------------------------------
2022-07-04 06:41:21 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 06:41:21 info: ---------------------------------------
2022-07-04 06:41:26 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()`
    √ should take a single argument (1 ms)
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (4 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.142 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-07-04 06:41:30 error: *** ESLint Report ***

ex1-johnWho.js
  15:22  error  Expected '===' and instead saw '=='  eqeqeq
  17:27  error  Expected '===' and instead saw '=='  eqeqeq

✖ 2 problems (2 errors, 0 warnings)


2022-07-04 06:42:08 info: ---------------------------------------
2022-07-04 06:42:08 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 06:42:08 info: ---------------------------------------
2022-07-04 06:42:14 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (4 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (2 ms)
    √ should call `new Promise()`
    √ should take a single argument (1 ms)
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (3 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.109 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-07-04 06:42:40 info: ---------------------------------------
2022-07-04 06:42:40 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 06:42:40 info: ---------------------------------------
2022-07-04 06:42:46 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (3 ms)
    × should reject with an Error object when called without an argument (2 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.071 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-07-04 06:48:55 info: ---------------------------------------
2022-07-04 06:48:55 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 06:48:55 info: ---------------------------------------
2022-07-04 06:49:02 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    × should exist and be executable (3 ms)
    √ should have all TODO comments removed
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    × should call `new Promise()` (1 ms)
    × should take a single argument (2 ms)
    × `resolve()` should be called with a one argument (1 ms)
    × `reject()` should be called with a one argument
    × should resolve when called with a string argument
    × should reject with an Error object when called without an argument

  ● getAnonName › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      46 |
      47 |   test('should exist and be executable', () => {
    > 48 |     expect(exported).toBeDefined();
         |                      ^
      49 |   });
      50 |
      51 |   testTodosRemoved(() => source);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:48:22)

  ● getAnonName › should call `new Promise()`

    expect(received).toBeDefined()

    Received: undefined

      54 |
      55 |   test('should call `new Promise()`', () => {
    > 56 |     expect(state.newPromise).toBeDefined();
         |                              ^
      57 |   });
      58 |
      59 |   test('should take a single argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:56:30)

  ● getAnonName › should take a single argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      58 |
      59 |   test('should take a single argument', () => {
    > 60 |     expect(state.paramCount).toBe(1);
         |                              ^
      61 |   });
      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:60:30)

  ● getAnonName › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {
    > 64 |     expect(state.resolve).toBe(1);
         |                           ^
      65 |   });
      66 |
      67 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:64:27)

  ● getAnonName › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      66 |
      67 |   test('`reject()` should be called with a one argument', () => {
    > 68 |     expect(state.reject).toBe(1);
         |                          ^
      69 |   });
      70 |
      71 |   test('should resolve when called with a string argument', async () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:68:26)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeDefined()

    Received: undefined

      71 |   test('should resolve when called with a string argument', async () => {
      72 |     expect.assertions(3);
    > 73 |     expect(exported).toBeDefined();
         |                      ^
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')
      76 |       .mockImplementation((cb) => cb());

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:73:22)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeDefined()

    Received: undefined

      83 |   test('should reject with an Error object when called without an argument', async () => {
      84 |     expect.assertions(3);
    > 85 |     expect(exported).toBeDefined();
         |                      ^
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')
      88 |       .mockImplementation((cb) => cb());

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:85:22)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       7 failed, 2 passed, 9 total
Snapshots:   0 total
Time:        1.408 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-07-04 06:49:05 error: *** ESLint Report ***

ex1-johnWho.js
  22:11  error  Parsing error: Identifier 'result' has already been declared

✖ 1 problem (1 error, 0 warnings)


2022-07-04 06:49:36 info: ---------------------------------------
2022-07-04 06:49:36 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 06:49:36 info: ---------------------------------------
2022-07-04 06:49:41 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (2 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (5 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        0.969 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-07-04 06:58:07 info: ---------------------------------------
2022-07-04 06:58:07 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 06:58:07 info: ---------------------------------------
2022-07-04 06:58:13 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()` (1 ms)
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-07-04 06:59:09 info: ---------------------------------------
2022-07-04 06:59:09 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 06:59:09 info: ---------------------------------------
2022-07-04 06:59:14 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
node:internal/process/promises:246
          triggerUncaughtException(err, true /* fromPromise */);
          ^

[UnhandledPromiseRejection: This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). The promise rejected with the reason "You didn't pass in a first name!".] {
  code: 'ERR_UNHANDLED_REJECTION'
}
2022-07-04 07:00:03 info: ---------------------------------------
2022-07-04 07:00:03 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 07:00:03 info: ---------------------------------------
2022-07-04 07:00:09 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
node:internal/process/promises:246
          triggerUncaughtException(err, true /* fromPromise */);
          ^

[UnhandledPromiseRejection: This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). The promise rejected with the reason "You didn't pass in a first name!".] {
  code: 'ERR_UNHANDLED_REJECTION'
}
2022-07-04 07:01:09 info: ---------------------------------------
2022-07-04 07:01:09 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 07:01:09 info: ---------------------------------------
2022-07-04 07:01:15 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (6 ms)
    √ should have all TODO comments removed (2 ms)
    √ `getAnonName` should not contain unneeded console.log calls (4 ms)
    √ should call `new Promise()` (2 ms)
    √ should take a single argument (1 ms)
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument (2 ms)
    × should resolve when called with a string argument (9 ms)
    × should reject with an Error object when called without an argument (2 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.198 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-07-04 07:02:12 info: ---------------------------------------
2022-07-04 07:02:12 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 07:02:12 info: ---------------------------------------
2022-07-04 07:02:17 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()` (1 ms)
    √ should take a single argument (1 ms)
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (3 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.03 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-07-04 08:43:50 info: ---------------------------------------
2022-07-04 08:43:50 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 08:43:50 info: ---------------------------------------
2022-07-04 08:43:55 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (4 ms)
    √ should have all TODO comments removed
    × `getAnonName` should not contain unneeded console.log calls (4 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (1 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › `getAnonName` should not contain unneeded console.log calls

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      137 |       });
      138 |
    > 139 |     expect(callsConsoleLog).toBe(false);
          |                             ^
      140 |   });
      141 | }
      142 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:139:29)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 6 passed, 9 total
Snapshots:   0 total
Time:        1.012 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-07-04 08:45:16 info: ---------------------------------------
2022-07-04 08:45:16 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 08:45:16 info: ---------------------------------------
2022-07-04 08:45:19 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed
    × `getAnonName` should not contain unneeded console.log calls (4 ms)
    √ should call `new Promise()` (1 ms)
    √ should take a single argument
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument

  ● getAnonName › `getAnonName` should not contain unneeded console.log calls

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      137 |       });
      138 |
    > 139 |     expect(callsConsoleLog).toBe(false);
          |                             ^
      140 |   });
      141 | }
      142 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:139:29)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 6 passed, 9 total
Snapshots:   0 total
Time:        0.657 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-07-04 08:46:53 info: ---------------------------------------
2022-07-04 08:46:53 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 08:46:53 info: ---------------------------------------
2022-07-04 08:46:56 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed (1 ms)
    × `getAnonName` should not contain unneeded console.log calls (3 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (1 ms)
    × should reject with an Error object when called without an argument

  ● getAnonName › `getAnonName` should not contain unneeded console.log calls

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      137 |       });
      138 |
    > 139 |     expect(callsConsoleLog).toBe(false);
          |                             ^
      140 |   });
      141 | }
      142 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:139:29)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 6 passed, 9 total
Snapshots:   0 total
Time:        0.57 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-07-04 08:48:44 info: ---------------------------------------
2022-07-04 08:48:44 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 08:48:44 info: ---------------------------------------
2022-07-04 08:48:47 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    × `getAnonName` should not contain unneeded console.log calls (3 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › `getAnonName` should not contain unneeded console.log calls

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      137 |       });
      138 |
    > 139 |     expect(callsConsoleLog).toBe(false);
          |                             ^
      140 |   });
      141 | }
      142 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:139:29)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 6 passed, 9 total
Snapshots:   0 total
Time:        0.683 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-07-04 08:50:43 info: ---------------------------------------
2022-07-04 08:50:43 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 08:50:43 info: ---------------------------------------
2022-07-04 08:50:46 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    × `getAnonName` should not contain unneeded console.log calls (5 ms)
    √ should call `new Promise()` (1 ms)
    √ should take a single argument
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument

  ● getAnonName › `getAnonName` should not contain unneeded console.log calls

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      137 |       });
      138 |
    > 139 |     expect(callsConsoleLog).toBe(false);
          |                             ^
      140 |   });
      141 | }
      142 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:139:29)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 6 passed, 9 total
Snapshots:   0 total
Time:        0.777 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-07-04 08:54:56 info: ---------------------------------------
2022-07-04 08:54:56 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 08:54:56 info: ---------------------------------------
2022-07-04 08:54:59 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    × `getAnonName` should not contain unneeded console.log calls (3 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    √ should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › `getAnonName` should not contain unneeded console.log calls

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      137 |       });
      138 |
    > 139 |     expect(callsConsoleLog).toBe(false);
          |                             ^
      140 |   });
      141 | }
      142 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:139:29)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf(expected)

    Expected constructor: Error

    Received value has no prototype
    Received value: "You didn't pass in a first name!"

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |                                    ^
      93 |   });
      94 | });
      95 |

      at Object.toBeInstanceOf (node_modules/expect/build/index.js:285:22)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:36)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        0.684 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-07-04 08:55:29 info: ---------------------------------------
2022-07-04 08:55:29 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 08:55:29 info: ---------------------------------------
2022-07-04 08:55:32 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()` (1 ms)
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    √ should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument (2 ms)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf(expected)

    Expected constructor: Error

    Received value has no prototype
    Received value: "You didn't pass in a first name!"

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |                                    ^
      93 |   });
      94 | });
      95 |

      at Object.toBeInstanceOf (node_modules/expect/build/index.js:285:22)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:36)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 8 passed, 9 total
Snapshots:   0 total
Time:        0.688 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-07-04 08:58:14 info: ---------------------------------------
2022-07-04 08:58:14 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-04 08:58:14 info: ---------------------------------------
2022-07-04 08:58:17 info: All unit tests passed.
2022-07-04 08:58:21 info: All steps were completed successfully
2022-07-04 09:09:21 info: -------------------------------------------------
2022-07-04 09:09:21 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-07-04 09:09:21 info: -------------------------------------------------
2022-07-04 09:09:25 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    √ `checkDoubleDigits` should not contain unneeded console.log calls (1 ms)
    √ should call new Promise() (1 ms)
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    √ should be a function that takes a single argument
    × (9) should return a rejected promise with an Error object (2 ms)
    × (10) should return a promise that resolves to "This is a double digit number!" (2 ms)
    × (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    × (100) should return a rejected promise with an Error object

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "Expected a double digit number but got 9"

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:12)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect(received).resolves.toEqual(expected) // deep equality

    Expected: StringContaining "This is a double digit number!"
    Received: "Expected a double digit number but got 10"

      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);
    > 75 |     return expect(promise).resolves.toEqual(
         |                                     ^
      76 |       expect.stringContaining('This is a double digit number!')
      77 |     );
      78 |   });

      at Object.toEqual (node_modules/expect/build/index.js:242:22)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:75:37)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect(received).resolves.toEqual(expected) // deep equality

    Expected: StringContaining "This is a double digit number!"
    Received: "Expected a double digit number but got 99"

      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
    > 84 |     return expect(promise).resolves.toEqual(
         |                                     ^
      85 |       expect.stringContaining('This is a double digit number!')
      86 |     );
      87 |   });

      at Object.toEqual (node_modules/expect/build/index.js:242:22)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:84:37)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "Expected a double digit number but got 100"

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      94 |   });
      95 | });
      96 |

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       4 failed, 7 passed, 11 total
Snapshots:   0 total
Time:        0.728 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-07-04 09:10:41 info: -------------------------------------------------
2022-07-04 09:10:41 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-07-04 09:10:41 info: -------------------------------------------------
2022-07-04 09:10:44 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (1 ms)
    √ should call new Promise()
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument
    √ should be a function that takes a single argument (1 ms)
    × (9) should return a rejected promise with an Error object (2 ms)
    × (10) should return a promise that resolves to "This is a double digit number!" (2 ms)
    × (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    × (100) should return a rejected promise with an Error object

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: [Error: Expected a double digit number but got 9]

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:12)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect(received).resolves.toEqual(expected) // deep equality

    Expected: StringContaining "This is a double digit number!"
    Received: [Error: Expected a double digit number but got 10]

      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);
    > 75 |     return expect(promise).resolves.toEqual(
         |                                     ^
      76 |       expect.stringContaining('This is a double digit number!')
      77 |     );
      78 |   });

      at Object.toEqual (node_modules/expect/build/index.js:242:22)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:75:37)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect(received).resolves.toEqual(expected) // deep equality

    Expected: StringContaining "This is a double digit number!"
    Received: [Error: Expected a double digit number but got 99]

      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
    > 84 |     return expect(promise).resolves.toEqual(
         |                                     ^
      85 |       expect.stringContaining('This is a double digit number!')
      86 |     );
      87 |   });

      at Object.toEqual (node_modules/expect/build/index.js:242:22)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:84:37)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: [Error: Expected a double digit number but got 100]

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      94 |   });
      95 | });
      96 |

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       4 failed, 7 passed, 11 total
Snapshots:   0 total
Time:        0.689 s, estimated 1 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-07-04 09:12:38 info: -------------------------------------------------
2022-07-04 09:12:38 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-07-04 09:12:38 info: -------------------------------------------------
2022-07-04 09:12:41 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    √ `checkDoubleDigits` should not contain unneeded console.log calls
    √ should call new Promise()
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument
    √ should be a function that takes a single argument (1 ms)
    √ (9) should return a rejected promise with an Error object (1 ms)
    × (10) should return a promise that resolves to "This is a double digit number!" (2 ms)
    × (99) should return a promise that resolves to "This is a double digit number!"
    √ (100) should return a rejected promise with an Error object (1 ms)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect(received).resolves.toEqual()

    Received promise rejected instead of resolved
    Rejected to value: [Error: Expected a double digit number but got 10]

      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);
    > 75 |     return expect(promise).resolves.toEqual(
         |            ^
      76 |       expect.stringContaining('This is a double digit number!')
      77 |     );
      78 |   });

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:75:12)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
    > 71 |     expect.assertions(3);
         |            ^
      72 |     expect(exported).toBeDefined();
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:71:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect(received).resolves.toEqual()

    Received promise rejected instead of resolved
    Rejected to value: [Error: Expected a double digit number but got 99]

      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
    > 84 |     return expect(promise).resolves.toEqual(
         |            ^
      85 |       expect.stringContaining('This is a double digit number!')
      86 |     );
      87 |   });

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:84:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      79 |
      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
    > 81 |     expect.assertions(2);
         |            ^
      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:81:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        0.712 s, estimated 1 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-07-04 09:13:23 info: -------------------------------------------------
2022-07-04 09:13:23 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-07-04 09:13:23 info: -------------------------------------------------
2022-07-04 09:13:26 info: All unit tests passed.
2022-07-04 09:13:31 info: All steps were completed successfully
2022-07-04 09:23:28 info: ---------------------------------------
2022-07-04 09:23:28 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-07-04 09:23:28 info: ---------------------------------------
2022-07-04 09:23:31 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    √ should exist and be executable (2 ms)
    × should have all TODO comments removed (1 ms)
    × should call `new Promise()` (1 ms)
    × `resolve()` should be called with a one argument (1 ms)
    × `reject()` should be called with a one argument
    × should resolve when the die settles successfully (1 ms)
    × should reject with an Error when the die rolls off the table (1 ms)

  ● rollDie › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

  ● rollDie › should call `new Promise()`

    expect(received).toBeDefined()

    Received: undefined

      38 |
      39 |   test('should call `new Promise()`', () => {
    > 40 |     expect(state.newPromise).toBeDefined();
         |                              ^
      41 |   });
      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:40:30)

  ● rollDie › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {
    > 44 |     expect(state.resolve).toBe(1);
         |                           ^
      45 |   });
      46 |
      47 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:44:27)

  ● rollDie › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      46 |
      47 |   test('`reject()` should be called with a one argument', () => {
    > 48 |     expect(state.reject).toBe(1);
         |                          ^
      49 |   });
      50 |
      51 |   test('should resolve when the die settles successfully', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:48:26)

  ● rollDie › should resolve when the die settles successfully

    TypeError: callback is not a function

      32 |     if (roll === randomRollsToDo) {
      33 |       // TODO replace "success" callback
    > 34 |       callback(null, value);
         |       ^
      35 |     }
      36 |
      37 |     // Schedule the next roll todo until no more rolls to do

      at rollOnce (3-UsingAPIs/Week1/homework/ex3-rollDie.js:34:7)
      at cb (3-UsingAPIs/Week1/homework/ex3-rollDie.js:39:24)
      at 3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:59:35
      at rollOnce (3-UsingAPIs/Week1/homework/ex3-rollDie.js:39:7)
      at cb (3-UsingAPIs/Week1/homework/ex3-rollDie.js:39:24)
      at 3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:59:35

  ● rollDie › should resolve when the die settles successfully

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      50 |
      51 |   test('should resolve when the die settles successfully', () => {
    > 52 |     expect.assertions(3);
         |            ^
      53 |     expect(exported).toBeDefined();
      54 |
      55 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:52:12)

  ● rollDie › should reject with an Error when the die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      73 |
      74 |   test('should reject with an Error when the die rolls off the table', async () => {
    > 75 |     expect.assertions(3);
         |            ^
      76 |     expect(exported).toBeDefined();
      77 |
      78 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:75:12)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 1 passed, 7 total
Snapshots:   0 total
Time:        0.737 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-07-05 11:44:54 info: ---------------------------------------
2022-07-05 11:44:54 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-07-05 11:44:54 info: ---------------------------------------
2022-07-05 11:44:58 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    √ should exist and be executable (2 ms)
    × should have all TODO comments removed (2 ms)
    × should call `new Promise()`
    × `resolve()` should be called with a one argument (2 ms)
    × `reject()` should be called with a one argument (1 ms)
    × should resolve when the die settles successfully (2 ms)
    × should reject with an Error when the die rolls off the table

  ● rollDie › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

  ● rollDie › should call `new Promise()`

    expect(received).toBeDefined()

    Received: undefined

      38 |
      39 |   test('should call `new Promise()`', () => {
    > 40 |     expect(state.newPromise).toBeDefined();
         |                              ^
      41 |   });
      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:40:30)

  ● rollDie › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {
    > 44 |     expect(state.resolve).toBe(1);
         |                           ^
      45 |   });
      46 |
      47 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:44:27)

  ● rollDie › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      46 |
      47 |   test('`reject()` should be called with a one argument', () => {
    > 48 |     expect(state.reject).toBe(1);
         |                          ^
      49 |   });
      50 |
      51 |   test('should resolve when the die settles successfully', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:48:26)

  ● rollDie › should resolve when the die settles successfully

    TypeError: callback is not a function

      30 |     if (roll === randomRollsToDo) {
      31 |       // TODO replace "success" callback
    > 32 |       callback(null, value);
         |       ^
      33 |     }
      34 |
      35 |     // Schedule the next roll todo until no more rolls to do

      at rollOnce (3-UsingAPIs/Week1/homework/ex3-rollDie.js:32:7)
      at cb (3-UsingAPIs/Week1/homework/ex3-rollDie.js:37:24)
      at 3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:59:35
      at rollOnce (3-UsingAPIs/Week1/homework/ex3-rollDie.js:37:7)
      at cb (3-UsingAPIs/Week1/homework/ex3-rollDie.js:37:24)
      at 3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:59:35

  ● rollDie › should resolve when the die settles successfully

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      50 |
      51 |   test('should resolve when the die settles successfully', () => {
    > 52 |     expect.assertions(3);
         |            ^
      53 |     expect(exported).toBeDefined();
      54 |
      55 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:52:12)

  ● rollDie › should reject with an Error when the die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      73 |
      74 |   test('should reject with an Error when the die rolls off the table', async () => {
    > 75 |     expect.assertions(3);
         |            ^
      76 |     expect(exported).toBeDefined();
      77 |
      78 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:75:12)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 1 passed, 7 total
Snapshots:   0 total
Time:        0.877 s, estimated 1 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-07-05 11:57:03 info: ---------------------------------------
2022-07-05 11:57:03 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-07-05 11:57:03 info: ---------------------------------------
2022-07-05 11:57:07 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    √ should exist and be executable (2 ms)
    × should have all TODO comments removed (2 ms)
    √ should call `new Promise()` (1 ms)
    × `resolve()` should be called with a one argument (2 ms)
    √ `reject()` should be called with a one argument (1 ms)
    √ should resolve when the die settles successfully (1 ms)
    √ should reject with an Error when the die rolls off the table (1 ms)

  ● rollDie › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

  ● rollDie › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 2

      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {
    > 44 |     expect(state.resolve).toBe(1);
         |                           ^
      45 |   });
      46 |
      47 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:44:27)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 5 passed, 7 total
Snapshots:   0 total
Time:        0.687 s, estimated 1 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-07-05 11:58:22 info: ---------------------------------------
2022-07-05 11:58:22 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-07-05 11:58:22 info: ---------------------------------------
2022-07-05 11:58:25 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    √ should exist and be executable (1 ms)
    × should have all TODO comments removed (1 ms)
    √ should call `new Promise()`
    × `resolve()` should be called with a one argument (2 ms)
    √ `reject()` should be called with a one argument
    √ should resolve when the die settles successfully (1 ms)
    √ should reject with an Error when the die rolls off the table (1 ms)

  ● rollDie › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

  ● rollDie › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 2

      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {
    > 44 |     expect(state.resolve).toBe(1);
         |                           ^
      45 |   });
      46 |
      47 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:44:27)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 5 passed, 7 total
Snapshots:   0 total
Time:        0.667 s, estimated 1 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-07-05 12:01:45 info: ---------------------------------------
2022-07-05 12:01:45 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-07-05 12:01:45 info: ---------------------------------------
2022-07-05 12:01:48 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    √ should call `new Promise()`
    × `resolve()` should be called with a one argument (2 ms)
    √ `reject()` should be called with a one argument
    √ should resolve when the die settles successfully (2 ms)
    √ should reject with an Error when the die rolls off the table (1 ms)

  ● rollDie › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 2

      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {
    > 44 |     expect(state.resolve).toBe(1);
         |                           ^
      45 |   });
      46 |
      47 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:44:27)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.667 s, estimated 1 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-07-05 12:04:09 info: ---------------------------------------
2022-07-05 12:04:09 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-07-05 12:04:09 info: ---------------------------------------
2022-07-05 12:04:12 info: All unit tests passed.
2022-07-05 12:04:17 info: All steps were completed successfully
2022-07-05 12:20:30 info: ---------------------------------------
2022-07-05 12:20:30 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-07-05 12:20:30 info: ---------------------------------------
2022-07-05 12:20:40 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js (5.878 s)
  rollDie
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    √ should call `new Promise()` (1 ms)
    × `resolve()` should be called with a one argument (4 ms)
    √ `reject()` should be called with a one argument
    × should resolve when the die settles successfully (5016 ms)
    √ should reject with an Error when the die rolls off the table (4 ms)

  ● rollDie › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 2

      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {
    > 44 |     expect(state.resolve).toBe(1);
         |                           ^
      45 |   });
      46 |
      47 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:44:27)

  ● rollDie › should resolve when the die settles successfully

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      49 |   });
      50 |
    > 51 |   test('should resolve when the die settles successfully', () => {
         |   ^
      52 |     expect.assertions(3);
      53 |     expect(exported).toBeDefined();
      54 |

      at 3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:51:3
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:8:1)

  ● rollDie › should resolve when the die settles successfully

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      50 |
      51 |   test('should resolve when the die settles successfully', () => {
    > 52 |     expect.assertions(3);
         |            ^
      53 |     expect(exported).toBeDefined();
      54 |
      55 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:52:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 5 passed, 7 total
Snapshots:   0 total
Time:        5.994 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-07-05 12:21:24 info: ---------------------------------------
2022-07-05 12:21:24 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-07-05 12:21:24 info: ---------------------------------------
2022-07-05 12:21:29 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    √ should call `new Promise()` (1 ms)
    × `resolve()` should be called with a one argument (4 ms)
    √ `reject()` should be called with a one argument
    √ should resolve when the die settles successfully (2 ms)
    √ should reject with an Error when the die rolls off the table (2 ms)

  ● rollDie › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 2

      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {
    > 44 |     expect(state.resolve).toBe(1);
         |                           ^
      45 |   });
      46 |
      47 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:44:27)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        1.093 s, estimated 6 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-07-05 02:43:23 info: ---------------------------------------
2022-07-05 02:43:23 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-07-05 02:43:23 info: ---------------------------------------
2022-07-05 02:43:29 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    √ should call `new Promise()`
    × `resolve()` should be called with a one argument (3 ms)
    √ `reject()` should be called with a one argument
    √ should resolve when the die settles successfully (2 ms)
    √ should reject with an Error when the die rolls off the table (2 ms)

  ● rollDie › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 2

      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {
    > 44 |     expect(state.resolve).toBe(1);
         |                           ^
      45 |   });
      46 |
      47 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:44:27)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        1.286 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-07-05 03:30:04 info: --------------------------------------------
2022-07-05 03:30:04 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 03:30:04 info: --------------------------------------------
2022-07-05 03:30:08 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed (1 ms)
    √ `rollDice` should not contain unneeded console.log calls (1 ms)
    √ should use `dice.map()`
    √ should use `Promise.all()` (1 ms)
    × should resolve when all dice settle successfully (12 ms)
    √ should reject with an Error when a die rolls off the table (95 ms)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      54 |     expect(promise).toBeInstanceOf(Promise);
      55 |     const result = await promise;
    > 56 |     expect(Array.isArray(result)).toBe(true);
         |                                   ^
      57 |     expect(result).toHaveLength(5);
      58 |
      59 |     promise.finally(() => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:56:35)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received three assertion calls.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.897 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-07-05 03:31:46 info: --------------------------------------------
2022-07-05 03:31:46 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 03:31:46 info: --------------------------------------------
2022-07-05 03:31:50 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed
    √ `rollDice` should not contain unneeded console.log calls (1 ms)
    √ should use `dice.map()`
    √ should use `Promise.all()`
    × should resolve when all dice settle successfully (18 ms)
    √ should reject with an Error when a die rolls off the table (86 ms)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      54 |     expect(promise).toBeInstanceOf(Promise);
      55 |     const result = await promise;
    > 56 |     expect(Array.isArray(result)).toBe(true);
         |                                   ^
      57 |     expect(result).toHaveLength(5);
      58 |
      59 |     promise.finally(() => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:56:35)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received three assertion calls.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.784 s, estimated 1 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-07-05 03:31:52 error: *** ESLint Report ***

ex4-pokerDiceAll.js
  33:34  error  'indx' is defined but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-07-05 03:38:22 info: --------------------------------------------
2022-07-05 03:38:22 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 03:38:22 info: --------------------------------------------
2022-07-05 03:38:26 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed
    √ `rollDice` should not contain unneeded console.log calls (1 ms)
    √ should use `dice.map()` (1 ms)
    √ should use `Promise.all()` (1 ms)
    × should resolve when all dice settle successfully (14 ms)
    √ should reject with an Error when a die rolls off the table (94 ms)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      54 |     expect(promise).toBeInstanceOf(Promise);
      55 |     const result = await promise;
    > 56 |     expect(Array.isArray(result)).toBe(true);
         |                                   ^
      57 |     expect(result).toHaveLength(5);
      58 |
      59 |     promise.finally(() => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:56:35)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received three assertion calls.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.779 s, estimated 1 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-07-05 03:38:28 error: *** ESLint Report ***

ex4-pokerDiceAll.js
  33:34  error  'element' is defined but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-07-05 03:39:15 info: --------------------------------------------
2022-07-05 03:39:15 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 03:39:15 info: --------------------------------------------
2022-07-05 03:39:18 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    √ `rollDice` should not contain unneeded console.log calls (1 ms)
    √ should use `dice.map()` (1 ms)
    √ should use `Promise.all()`
    × should resolve when all dice settle successfully (26 ms)
    √ should reject with an Error when a die rolls off the table (86 ms)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      54 |     expect(promise).toBeInstanceOf(Promise);
      55 |     const result = await promise;
    > 56 |     expect(Array.isArray(result)).toBe(true);
         |                                   ^
      57 |     expect(result).toHaveLength(5);
      58 |
      59 |     promise.finally(() => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:56:35)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received three assertion calls.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.779 s, estimated 1 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-07-05 03:39:45 info: --------------------------------------------
2022-07-05 03:39:45 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 03:39:45 info: --------------------------------------------
2022-07-05 03:39:49 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    √ `rollDice` should not contain unneeded console.log calls (1 ms)
    √ should use `dice.map()`
    √ should use `Promise.all()` (1 ms)
    × should resolve when all dice settle successfully (24 ms)
    √ should reject with an Error when a die rolls off the table (94 ms)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      54 |     expect(promise).toBeInstanceOf(Promise);
      55 |     const result = await promise;
    > 56 |     expect(Array.isArray(result)).toBe(true);
         |                                   ^
      57 |     expect(result).toHaveLength(5);
      58 |
      59 |     promise.finally(() => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:56:35)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received three assertion calls.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.818 s, estimated 1 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-07-05 03:46:31 info: --------------------------------------------
2022-07-05 03:46:31 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 03:46:31 info: --------------------------------------------
2022-07-05 03:46:35 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed
    × `rollDice` should not contain unneeded console.log calls (4 ms)
    √ should use `dice.map()`
    √ should use `Promise.all()`
    × should resolve when all dice settle successfully (20 ms)
    √ should reject with an Error when a die rolls off the table (91 ms)

  ● ex4-pokerDiceAll › `rollDice` should not contain unneeded console.log calls

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      137 |       });
      138 |
    > 139 |     expect(callsConsoleLog).toBe(false);
          |                             ^
      140 |   });
      141 | }
      142 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:139:29)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      54 |     expect(promise).toBeInstanceOf(Promise);
      55 |     const result = await promise;
    > 56 |     expect(Array.isArray(result)).toBe(true);
         |                                   ^
      57 |     expect(result).toHaveLength(5);
      58 |
      59 |     promise.finally(() => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:56:35)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received three assertion calls.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 5 passed, 7 total
Snapshots:   0 total
Time:        0.904 s, estimated 1 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-07-05 03:47:07 info: --------------------------------------------
2022-07-05 03:47:07 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 03:47:07 info: --------------------------------------------
2022-07-05 03:47:10 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    √ `rollDice` should not contain unneeded console.log calls
    √ should use `dice.map()` (1 ms)
    √ should use `Promise.all()`
    × should resolve when all dice settle successfully (11 ms)
    √ should reject with an Error when a die rolls off the table (94 ms)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      54 |     expect(promise).toBeInstanceOf(Promise);
      55 |     const result = await promise;
    > 56 |     expect(Array.isArray(result)).toBe(true);
         |                                   ^
      57 |     expect(result).toHaveLength(5);
      58 |
      59 |     promise.finally(() => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:56:35)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received three assertion calls.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.772 s, estimated 1 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-07-05 04:03:39 info: --------------------------------------------
2022-07-05 04:03:39 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 04:03:39 info: --------------------------------------------
2022-07-05 04:03:42 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    √ `rollDice` should not contain unneeded console.log calls (1 ms)
    √ should use `dice.map()`
    √ should use `Promise.all()` (1 ms)
    × should resolve when all dice settle successfully (20 ms)
    √ should reject with an Error when a die rolls off the table (87 ms)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      54 |     expect(promise).toBeInstanceOf(Promise);
      55 |     const result = await promise;
    > 56 |     expect(Array.isArray(result)).toBe(true);
         |                                   ^
      57 |     expect(result).toHaveLength(5);
      58 |
      59 |     promise.finally(() => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:56:35)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received three assertion calls.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.876 s, estimated 1 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-07-05 04:05:52 info: --------------------------------------------
2022-07-05 04:05:52 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 04:05:52 info: --------------------------------------------
2022-07-05 04:05:55 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed (1 ms)
    √ `rollDice` should not contain unneeded console.log calls (1 ms)
    √ should use `dice.map()`
    √ should use `Promise.all()`
    × should resolve when all dice settle successfully (14 ms)
    √ should reject with an Error when a die rolls off the table (94 ms)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      54 |     expect(promise).toBeInstanceOf(Promise);
      55 |     const result = await promise;
    > 56 |     expect(Array.isArray(result)).toBe(true);
         |                                   ^
      57 |     expect(result).toHaveLength(5);
      58 |
      59 |     promise.finally(() => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:56:35)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received three assertion calls.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.775 s, estimated 1 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-07-05 04:07:34 info: --------------------------------------------
2022-07-05 04:07:34 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 04:07:34 info: --------------------------------------------
2022-07-05 04:07:37 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    √ `rollDice` should not contain unneeded console.log calls
    √ should use `dice.map()`
    √ should use `Promise.all()`
    × should resolve when all dice settle successfully (14 ms)
    √ should reject with an Error when a die rolls off the table (85 ms)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      54 |     expect(promise).toBeInstanceOf(Promise);
      55 |     const result = await promise;
    > 56 |     expect(Array.isArray(result)).toBe(true);
         |                                   ^
      57 |     expect(result).toHaveLength(5);
      58 |
      59 |     promise.finally(() => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:56:35)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received three assertion calls.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.789 s, estimated 1 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-07-05 04:07:39 error: *** ESLint Report ***

ex4-pokerDiceAll.js
  32:32  error  'element' is defined but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-07-05 04:08:02 info: --------------------------------------------
2022-07-05 04:08:02 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 04:08:02 info: --------------------------------------------
2022-07-05 04:08:05 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed
    √ `rollDice` should not contain unneeded console.log calls (1 ms)
    √ should use `dice.map()`
    √ should use `Promise.all()`
    × should resolve when all dice settle successfully (10 ms)
    √ should reject with an Error when a die rolls off the table (92 ms)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      54 |     expect(promise).toBeInstanceOf(Promise);
      55 |     const result = await promise;
    > 56 |     expect(Array.isArray(result)).toBe(true);
         |                                   ^
      57 |     expect(result).toHaveLength(5);
      58 |
      59 |     promise.finally(() => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:56:35)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received three assertion calls.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.78 s, estimated 1 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-07-05 04:10:28 info: --------------------------------------------
2022-07-05 04:10:28 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 04:10:28 info: --------------------------------------------
2022-07-05 04:10:31 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed
    √ `rollDice` should not contain unneeded console.log calls
    √ should use `dice.map()`
    √ should use `Promise.all()`
    × should resolve when all dice settle successfully (11 ms)
    √ should reject with an Error when a die rolls off the table (93 ms)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      54 |     expect(promise).toBeInstanceOf(Promise);
      55 |     const result = await promise;
    > 56 |     expect(Array.isArray(result)).toBe(true);
         |                                   ^
      57 |     expect(result).toHaveLength(5);
      58 |
      59 |     promise.finally(() => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:56:35)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received three assertion calls.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.69 s, estimated 1 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-07-05 04:11:47 info: --------------------------------------------
2022-07-05 04:11:48 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 04:11:48 info: --------------------------------------------
2022-07-05 04:11:51 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    √ `rollDice` should not contain unneeded console.log calls
    √ should use `dice.map()` (1 ms)
    × should use `Promise.all()` (1 ms)
    × should resolve when all dice settle successfully (9 ms)
    × should reject with an Error when a die rolls off the table (86 ms)

  ● ex4-pokerDiceAll › should use `Promise.all()`

    expect(received).toBeDefined()

    Received: undefined

      42 |
      43 |   test('should use `Promise.all()`', () => {
    > 44 |     expect(state.promiseAll).toBeDefined();
         |                              ^
      45 |   });
      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:44:30)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      54 |     expect(promise).toBeInstanceOf(Promise);
      55 |     const result = await promise;
    > 56 |     expect(Array.isArray(result)).toBe(true);
         |                                   ^
      57 |     expect(result).toHaveLength(5);
      58 |
      59 |     promise.finally(() => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:56:35)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received three assertion calls.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

  ● ex4-pokerDiceAll › should reject with an Error when a die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      63 |
      64 |   test('should reject with an Error when a die rolls off the table', async () => {
    > 65 |     expect.assertions(3);
         |            ^
      66 |     expect(exported).toBeDefined();
      67 |
      68 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0.999);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:65:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 4 passed, 7 total
Snapshots:   0 total
Time:        0.854 s, estimated 1 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-07-05 04:16:39 info: --------------------------------------------
2022-07-05 04:16:39 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 04:16:39 info: --------------------------------------------
2022-07-05 04:16:42 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    √ `rollDice` should not contain unneeded console.log calls (1 ms)
    √ should use `dice.map()`
    √ should use `Promise.all()`
    × should resolve when all dice settle successfully (16 ms)
    √ should reject with an Error when a die rolls off the table (93 ms)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      54 |     expect(promise).toBeInstanceOf(Promise);
      55 |     const result = await promise;
    > 56 |     expect(Array.isArray(result)).toBe(true);
         |                                   ^
      57 |     expect(result).toHaveLength(5);
      58 |
      59 |     promise.finally(() => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:56:35)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received three assertion calls.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.693 s, estimated 1 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-07-05 04:19:54 info: --------------------------------------------
2022-07-05 04:19:54 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 04:19:54 info: --------------------------------------------
2022-07-05 04:19:57 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed
    √ `rollDice` should not contain unneeded console.log calls (1 ms)
    √ should use `dice.map()` (1 ms)
    √ should use `Promise.all()`
    × should resolve when all dice settle successfully (2 ms)
    √ should reject with an Error when a die rolls off the table (1 ms)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    ReferenceError: element is not defined

      30 |   const dice = [1, 2, 3, 4, 5];
      31 |  
    > 32 |    await Promise.all(dice.map((element)
         |                                ^
      33 |    .then(value =>{
      34 |     return value
      35 |    })));

      at rollDice (3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:32:32)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:53:21)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received two assertion calls.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.663 s, estimated 1 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-07-05 04:20:00 error: *** ESLint Report ***

ex4-pokerDiceAll.js
  27:7   error  'rollDie' is assigned a value but never used  no-unused-vars
  32:32  error  'element' is not defined                      no-undef

✖ 2 problems (2 errors, 0 warnings)


2022-07-05 04:21:05 info: --------------------------------------------
2022-07-05 04:21:05 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 04:21:05 info: --------------------------------------------
2022-07-05 04:21:08 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed
    √ `rollDice` should not contain unneeded console.log calls (1 ms)
    √ should use `dice.map()`
    √ should use `Promise.all()`
    × should resolve when all dice settle successfully (1 ms)
    √ should reject with an Error when a die rolls off the table

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    ReferenceError: element is not defined

      30 |   const dice = [1, 2, 3, 4, 5];
      31 |  
    > 32 |    await Promise.all(dice.map((element)
         |                                ^
      33 |    .then(value =>{
      34 |     return value
      35 |    })));

      at rollDice (3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:32:32)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:53:21)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received two assertion calls.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.662 s, estimated 1 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-07-05 04:21:11 error: *** ESLint Report ***

ex4-pokerDiceAll.js
  32:32  error  'element' is not defined  no-undef

✖ 1 problem (1 error, 0 warnings)


2022-07-05 04:40:51 info: --------------------------------------------
2022-07-05 04:40:51 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 04:40:51 info: --------------------------------------------
2022-07-05 04:40:54 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    √ `rollDice` should not contain unneeded console.log calls (1 ms)
    √ should use `dice.map()`
    √ should use `Promise.all()`
    × should resolve when all dice settle successfully (1 ms)
    √ should reject with an Error when a die rolls off the table (1 ms)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    ReferenceError: element is not defined

      30 |   const dice = [1, 2, 3, 4, 5];
      31 |  
    > 32 |    await Promise.all(dice.map((element)
         |                                ^
      33 |    .then(value =>{
      34 |     return value
      35 |    })));

      at rollDice (3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:32:32)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:53:21)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received two assertion calls.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.698 s, estimated 1 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-07-05 04:40:56 error: *** ESLint Report ***

ex4-pokerDiceAll.js
  32:32  error  'element' is not defined  no-undef

✖ 1 problem (1 error, 0 warnings)


2022-07-05 04:41:52 info: --------------------------------------------
2022-07-05 04:41:52 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 04:41:52 info: --------------------------------------------
2022-07-05 04:41:56 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed
    √ `rollDice` should not contain unneeded console.log calls (1 ms)
    √ should use `dice.map()` (1 ms)
    √ should use `Promise.all()`
    × should resolve when all dice settle successfully (13 ms)
    √ should reject with an Error when a die rolls off the table (94 ms)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      54 |     expect(promise).toBeInstanceOf(Promise);
      55 |     const result = await promise;
    > 56 |     expect(Array.isArray(result)).toBe(true);
         |                                   ^
      57 |     expect(result).toHaveLength(5);
      58 |
      59 |     promise.finally(() => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:56:35)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received three assertion calls.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.682 s, estimated 1 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-07-05 04:43:47 info: --------------------------------------------
2022-07-05 04:43:47 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 04:43:47 info: --------------------------------------------
2022-07-05 04:43:50 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    √ `rollDice` should not contain unneeded console.log calls (1 ms)
    √ should use `dice.map()` (1 ms)
    √ should use `Promise.all()`
    × should resolve when all dice settle successfully (24 ms)
    √ should reject with an Error when a die rolls off the table (92 ms)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      54 |     expect(promise).toBeInstanceOf(Promise);
      55 |     const result = await promise;
    > 56 |     expect(Array.isArray(result)).toBe(true);
         |                                   ^
      57 |     expect(result).toHaveLength(5);
      58 |
      59 |     promise.finally(() => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:56:35)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received three assertion calls.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.787 s, estimated 1 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-07-05 04:46:18 info: ----------------------------------------------
2022-07-05 04:46:18 info: >>> Running Unit Test `ex5-pokerDiceChain` <<<
2022-07-05 04:46:18 info: ----------------------------------------------
2022-07-05 04:46:21 error: *** Unit Test Error Report ***

Command failed: npx jest ex5-pokerDiceChain.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex5-pokerDiceChain.test.js
  ex5-pokerDiceChain
    √ should exist and be executable (1 ms)
    × should have all TODO comments removed (1 ms)
    √ `rollDice` should not contain unneeded console.log calls (1 ms)
    × should resolve when all dice settle successfully (58 ms)
    √ should reject with an Error when a die rolls off the table (86 ms)

  ● ex5-pokerDiceChain › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

  ● ex5-pokerDiceChain › should resolve when all dice settle successfully

    expect(received).toHaveLength(expected)

    Expected length: 5
    Received length: 2
    Received array:  ["NINE", "NINE"]

      33 |     const result = await promise;
      34 |     expect(Array.isArray(result)).toBe(true);
    > 35 |     expect(result).toHaveLength(5);
         |                    ^
      36 |
      37 |     promise.finally(() => {
      38 |       randomSpy.mockRestore();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex5-pokerDiceChain.test.js:35:20)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 3 passed, 5 total
Snapshots:   0 total
Time:        0.866 s
Ran all test suites matching /ex5-pokerDiceChain.test.js/i.
2022-07-05 04:53:01 info: --------------------------------------------
2022-07-05 04:53:01 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 04:53:01 info: --------------------------------------------
2022-07-05 04:53:04 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    × should exist and be executable (2 ms)
    √ should have all TODO comments removed
    √ `rollDice` should not contain unneeded console.log calls (1 ms)
    × should use `dice.map()`
    × should use `Promise.all()`
    × should resolve when all dice settle successfully
    × should reject with an Error when a die rolls off the table

  ● ex4-pokerDiceAll › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      30 |
      31 |   test('should exist and be executable', () => {
    > 32 |     expect(exported).toBeDefined();
         |                      ^
      33 |   });
      34 |
      35 |   testTodosRemoved(() => source);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:32:22)

  ● ex4-pokerDiceAll › should use `dice.map()`

    expect(received).toBeDefined()

    Received: undefined

      38 |
      39 |   test('should use `dice.map()`', () => {
    > 40 |     expect(state.diceMap).toBeDefined();
         |                           ^
      41 |   });
      42 |
      43 |   test('should use `Promise.all()`', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:40:27)

  ● ex4-pokerDiceAll › should use `Promise.all()`

    expect(received).toBeDefined()

    Received: undefined

      42 |
      43 |   test('should use `Promise.all()`', () => {
    > 44 |     expect(state.promiseAll).toBeDefined();
         |                              ^
      45 |   });
      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:44:30)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect(received).toBeDefined()

    Received: undefined

      47 |   test('should resolve when all dice settle successfully', async () => {
      48 |     expect.assertions(4);
    > 49 |     expect(exported).toBeDefined();
         |                      ^
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);
      52 |

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:49:22)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received one assertion call.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

  ● ex4-pokerDiceAll › should reject with an Error when a die rolls off the table

    expect(received).toBeDefined()

    Received: undefined

      64 |   test('should reject with an Error when a die rolls off the table', async () => {
      65 |     expect.assertions(3);
    > 66 |     expect(exported).toBeDefined();
         |                      ^
      67 |
      68 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0.999);
      69 |

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:66:22)

  ● ex4-pokerDiceAll › should reject with an Error when a die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      63 |
      64 |   test('should reject with an Error when a die rolls off the table', async () => {
    > 65 |     expect.assertions(3);
         |            ^
      66 |     expect(exported).toBeDefined();
      67 |
      68 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0.999);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:65:12)

Test Suites: 1 failed, 1 total
Tests:       5 failed, 2 passed, 7 total
Snapshots:   0 total
Time:        0.829 s, estimated 1 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-07-05 04:53:06 error: *** ESLint Report ***

ex4-pokerDiceAll.js
  31:9  error  Parsing error: Identifier 'dice' has already been declared

✖ 1 problem (1 error, 0 warnings)


2022-07-05 04:57:02 info: --------------------------------------------
2022-07-05 04:57:02 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 04:57:02 info: --------------------------------------------
2022-07-05 04:57:05 info: All unit tests passed.
2022-07-05 04:57:10 info: All steps were completed successfully
2022-07-05 04:58:23 info: --------------------------------------------
2022-07-05 04:58:23 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 04:58:23 info: --------------------------------------------
2022-07-05 04:58:26 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed (1 ms)
    √ `rollDice` should not contain unneeded console.log calls (1 ms)
    √ should use `dice.map()`
    √ should use `Promise.all()` (1 ms)
    √ should resolve when all dice settle successfully (1 ms)
    × should reject with an Error when a die rolls off the table

  ● ex4-pokerDiceAll › should reject with an Error when a die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      63 |
      64 |   test('should reject with an Error when a die rolls off the table', async () => {
    > 65 |     expect.assertions(3);
         |            ^
      66 |     expect(exported).toBeDefined();
      67 |
      68 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0.999);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:65:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.661 s, estimated 1 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
node:internal/process/promises:246
          triggerUncaughtException(err, true /* fromPromise */);
          ^

[UnhandledPromiseRejection: This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). The promise rejected with the reason "Error: Die 1 rolled off the table.
".] {
  code: 'ERR_UNHANDLED_REJECTION'
}
2022-07-05 04:58:46 info: --------------------------------------------
2022-07-05 04:58:46 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 04:58:46 info: --------------------------------------------
2022-07-05 04:58:49 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    √ `rollDice` should not contain unneeded console.log calls
    √ should use `dice.map()`
    √ should use `Promise.all()`
    √ should resolve when all dice settle successfully (1 ms)
    × should reject with an Error when a die rolls off the table (1 ms)

  ● ex4-pokerDiceAll › should reject with an Error when a die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      63 |
      64 |   test('should reject with an Error when a die rolls off the table', async () => {
    > 65 |     expect.assertions(3);
         |            ^
      66 |     expect(exported).toBeDefined();
      67 |
      68 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0.999);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:65:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.643 s, estimated 1 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
node:internal/process/promises:246
          triggerUncaughtException(err, true /* fromPromise */);
          ^

[UnhandledPromiseRejection: This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). The promise rejected with the reason "Error: Die 1 rolled off the table.
".] {
  code: 'ERR_UNHANDLED_REJECTION'
}
2022-07-05 04:59:42 info: --------------------------------------------
2022-07-05 04:59:42 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-07-05 04:59:42 info: --------------------------------------------
2022-07-05 04:59:45 info: All unit tests passed.
2022-07-05 04:59:50 info: All steps were completed successfully
2022-07-05 05:04:04 info: ---------------------------------------
2022-07-05 05:04:04 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-07-05 05:04:04 info: ---------------------------------------
2022-07-05 05:04:07 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    √ should call `new Promise()` (1 ms)
    × `resolve()` should be called with a one argument (4 ms)
    √ `reject()` should be called with a one argument
    √ should resolve when the die settles successfully (1 ms)
    √ should reject with an Error when the die rolls off the table (1 ms)

  ● rollDie › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 2

      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {
    > 44 |     expect(state.resolve).toBe(1);
         |                           ^
      45 |   });
      46 |
      47 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:44:27)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.789 s, estimated 2 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-07-05 05:06:19 info: ---------------------------------------
2022-07-05 05:06:19 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-07-05 05:06:19 info: ---------------------------------------
2022-07-05 05:06:22 info: All unit tests passed.
2022-07-05 05:06:27 info: All steps were completed successfully
2022-07-05 07:31:37 info: ----------------------------------------------
2022-07-05 07:31:37 info: >>> Running Unit Test `ex5-pokerDiceChain` <<<
2022-07-05 07:31:37 info: ----------------------------------------------
2022-07-05 07:31:42 error: *** Unit Test Error Report ***

Command failed: npx jest ex5-pokerDiceChain.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex5-pokerDiceChain.test.js
  ex5-pokerDiceChain
    √ should exist and be executable (2 ms)
    × should have all TODO comments removed (2 ms)
    √ `rollDice` should not contain unneeded console.log calls (1 ms)
    × should resolve when all dice settle successfully (58 ms)
    √ should reject with an Error when a die rolls off the table (95 ms)

  ● ex5-pokerDiceChain › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

  ● ex5-pokerDiceChain › should resolve when all dice settle successfully

    expect(received).toHaveLength(expected)

    Expected length: 5
    Received length: 2
    Received array:  ["NINE", "NINE"]

      33 |     const result = await promise;
      34 |     expect(Array.isArray(result)).toBe(true);
    > 35 |     expect(result).toHaveLength(5);
         |                    ^
      36 |
      37 |     promise.finally(() => {
      38 |       randomSpy.mockRestore();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex5-pokerDiceChain.test.js:35:20)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 3 passed, 5 total
Snapshots:   0 total
Time:        1.1 s
Ran all test suites matching /ex5-pokerDiceChain.test.js/i.
2022-07-05 07:36:24 info: ----------------------------------------------
2022-07-05 07:36:24 info: >>> Running Unit Test `ex5-pokerDiceChain` <<<
2022-07-05 07:36:24 info: ----------------------------------------------
2022-07-05 07:36:30 info: All unit tests passed.
2022-07-05 07:36:38 info: All steps were completed successfully
2022-07-15 04:41:25 info: ---------------------------------------
2022-07-15 04:41:25 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-15 04:41:25 info: ---------------------------------------
2022-07-15 04:41:32 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls
    √ should call `new Promise()`
    √ should take a single argument (1 ms)
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument (1 ms)
    √ should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument (3 ms)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: [Error: You didn't pass in a first name!]

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 8 passed, 9 total
Snapshots:   0 total
Time:        1.398 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-07-15 04:42:44 info: ---------------------------------------
2022-07-15 04:42:44 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-15 04:42:44 info: ---------------------------------------
2022-07-15 04:42:49 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    × `getAnonName` should not contain unneeded console.log calls (4 ms)
    √ should call `new Promise()` (1 ms)
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument (1 ms)
    √ should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › `getAnonName` should not contain unneeded console.log calls

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      137 |       });
      138 |
    > 139 |     expect(callsConsoleLog).toBe(false);
          |                             ^
      140 |   });
      141 | }
      142 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:139:29)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: [Error: You didn't pass in a first name!]

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.202 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-07-15 04:53:25 info: ---------------------------------------
2022-07-15 04:53:25 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-07-15 04:53:25 info: ---------------------------------------
2022-07-15 04:53:33 info: All unit tests passed.
2022-07-15 04:53:43 info: All steps were completed successfully
2022-07-15 05:09:39 info: ---------------------------------------
2022-07-15 05:09:39 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-07-15 05:09:39 info: ---------------------------------------
2022-07-15 05:09:47 info: All unit tests passed.
2022-07-15 05:09:56 info: All steps were completed successfully
2022-07-15 05:15:12 info: ---------------------------------------
2022-07-15 05:15:12 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-07-15 05:15:12 info: ---------------------------------------
2022-07-15 05:15:18 info: All unit tests passed.
2022-07-15 05:15:26 info: All steps were completed successfully
